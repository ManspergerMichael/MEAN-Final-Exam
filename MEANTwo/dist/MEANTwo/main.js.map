{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/update/update.component.css","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { NewComponent } from './new/new.component';\nimport { UpdateComponent } from './update/update.component';\nimport { DetailsComponent } from './details/details.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch:'full', component:ListComponent},\n  {path: 'list', component:ListComponent},\n  {path: 'new', component:NewComponent},\n  {path: 'update/:id', component:UpdateComponent},\n  {path: 'details/:id', component:DetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"h1{text-align: center}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div >\\n  <h1>\\n    Commerce Manager\\n  </h1>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { DetailsComponent } from './details/details.component';\nimport { NewComponent } from './new/new.component';\nimport { UpdateComponent } from './update/update.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    DetailsComponent,\n    NewComponent,\n    UpdateComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"Header\\\">\\n      <h1>Product Details</h1>\\n      <br>\\n      <h4>To delete a product, the Quantity must be 0</h4>\\n  </div>\\n  <div class=\\\"details\\\">\\n    <label>Product Name:</label><span class=\\\"col\\\"> {{prod.name}}</span><br>\\n    <label>Quantity In Stock:</label><span class=\\\"col\\\"> {{prod.quantity}} </span><br>\\n    <label>Product Price:</label><span class=\\\"col\\\"> {{prod.price}}</span><br>\\n  </div>\\n  <div class=\\\"nav\\\">\\n    <button [routerLink]=\\\"['/list']\\\">BACK</button>\\n    <button *ngIf=\\\"prod.quantity == 0\\\" (click)=\\\"delete()\\\" >DELETE</button>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  prod:any\n  id:any\n  messages:any\n  deleteFlag:boolean\n  constructor(private _http:HttpService,private _route: ActivatedRoute, private _router:Router) {\n    this.deleteFlag = false;\n    this.prod = {_id:'',name:'',quantity:'',price:''};\n    this.id = this._route.snapshot.paramMap.get(\"id\");\n    console.log(this.id);\n   }\n\n  ngOnInit() {\n    this.find(this.id);\n  }\n\n  find(id){\n    let observeable = this._http.find(id);\n    observeable.subscribe(data =>{\n      console.log(data['data']);\n      this.prod = data['data'];\n    })\n  }\n\n  delete(){\n    let observeable = this._http.delete(this.id);\n    observeable.subscribe(data =>{\n      if(data['message'] == \"Success\"){\n        this._router.navigate(['/list']);\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http:HttpClient) { }\n\n  //routes\n  getAll(){\n    return this._http.get('/getAll');\n  }\n  find(id){\n    return this._http.get('/find/'+id);\n  }\n  delete(id){\n    return this._http.get('/delete/'+id);\n  }\n  create(data){\n    return this._http.post('/create', data);\n  }\n  update(id, data){\n    return this._http.post('/update/'+id, data);\n  }\n}\n","module.exports = \".header *{\\n    display: inline-block;\\n    color: 'red';\\n}\\n.header h1{\\n    padding-left: 40px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"list\\\">\\n    <div class=\\\"header\\\">\\n      <h1>Product List</h1>\\n      \\n    </div>\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Name</th>\\n          <th>QTY</th>\\n          <th>Price</th>\\n          <th>Actions</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let prod of products\\\">\\n          <td>{{prod._id}}</td>\\n          <td>{{prod.name}}</td>\\n          <td>{{prod.quantity}}</td>\\n          <td>{{prod.price}}</td>\\n          <td><button [routerLink]=\\\"['/update/'+prod._id]\\\">Edit</button><button [routerLink]=\\\"['/details/'+prod._id]\\\">Details</button></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <button [routerLink]=\\\"['/new']\\\">Add New Product</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  products:any\n  constructor(private _http:HttpService) { }\n\n  ngOnInit() {\n    this.show();\n  }\n\n  show(){\n    let observeable = this._http.getAll();\n      observeable.subscribe(data => {\n        //console.log(data['data']);\n        this.products = data['data'];\n      })\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>New Product</h1>\\n  <ul *ngIf=\\\"messages\\\">\\n    <li *ngFor=\\\"let message of messages\\\">\\n      {{message}}\\n    </li>\\n  </ul>\\n  <form (submit)=\\\"create($event)\\\" >\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.name\\\">Name: </label> <input  type=\\\"text\\\" name=\\\"prod.name\\\" [(ngModel)]=\\\"prod.name\\\"><br>\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.quantity\\\">Quantity:</label> <input type=\\\"number\\\" name=\\\"prod.quantity\\\" [(ngModel)]=\\\"prod.quantity\\\"><br>\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.price\\\">Price: </label><input type=\\\"number\\\" name=\\\"prod.price\\\" [(ngModel)]=\\\"prod.price\\\"/><br>\\n    </div>\\n    <input type=\\\"submit\\\" value=\\\"CREATE\\\">\\n    <button [routerLink]=\\\"['/list']\\\">CANCEL</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from '../http.service'\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  prod:any\n  messages:any\n\n  constructor(private _http:HttpService,private _route: ActivatedRoute, private _router:Router) {\n    this.prod = {name:\"\",quantity:\"\",price:\"\"};\n    this.messages = [];\n   }\n\n  ngOnInit() {\n  }\n\n  create(event){\n    this.messages = [];\n    let obs = this._http.create(this.prod);\n    obs.subscribe(data =>{\n      if(data['message']==\"Error\"){\n        console.log(data);\n        if(data['error']['errors']['name']){\n          this.messages.push(data['error']['errors']['name']['message']);\n        }\n        if(data['error']['errors']['quantity']){\n          this.messages.push(data['error']['errors']['quantity']['message']);\n        }\n        if(data['error']['errors']['price']){\n          this.messages.push(data['error']['errors']['price']['message']);\n        }\n      }\n      else{\n        this._router.navigate(['/list']);\n      }\n    })\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Update Product</h1>\\n  <ul *ngIf=\\\"messages\\\">\\n    <li *ngFor=\\\"let message of messages\\\">\\n      {{message}}\\n    </li>\\n  </ul>\\n\\n  <form (submit)=\\\"update($event)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.name\\\">Name: </label><input type=\\\"text\\\" name=\\\"prod.name\\\" [(ngModel)]=\\\"prod.name\\\"><br>\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.quantity\\\">Quantity: </label><input type=\\\"number\\\" name=\\\"prod.quantity\\\" [(ngModel)]=\\\"prod.quantity\\\"><br>\\n      <label class=\\\"control-label col-sm-1\\\" for=\\\"prod.price\\\">Price: </label><input type=\\\"number\\\" name=\\\"prod.price\\\" [(ngModel)]=\\\"prod.price\\\"><br>\\n    </div>\\n  <input type=\\\"submit\\\" value=\\\"UPDATE\\\">\\n  <button [routerLink]=\\\"['/list']\\\">CANCEL</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {HttpService} from '../http.service'\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  prod:any\n  messages:any\n  id:any\n  constructor(private _http:HttpService,private _route: ActivatedRoute, private _router:Router) {\n    this.prod = {name:'',quantity:'',price:''}\n    this.id = this._route.snapshot.paramMap.get(\"id\");\n    this.messages = [];\n   }\n\n  ngOnInit() {\n    this.find(this.id);\n  }\n\n  find(id){\n    let observeable = this._http.find(id);\n    observeable.subscribe(data =>{\n      console.log(data['data']);\n      this.prod = data['data'];\n    })\n  }\n\n  update($event){\n    this.messages = [];\n    let obs = this._http.update(this.id,this.prod);\n    obs.subscribe(data =>{\n      console.log(data);\n      if(data['message']==\"Error\"){\n        console.log(data);\n        if(data['error']['errors']['name']){\n          this.messages.push(data['error']['errors']['name']['message']);\n        }\n        if(data['error']['errors']['quantity']){\n          this.messages.push(data['error']['errors']['quantity']['message']);\n        }\n        if(data['error']['errors']['price']){\n          this.messages.push(data['error']['errors']['price']['message']);\n        }\n      }\n      else{\n        this._router.navigate(['/list']);\n      }\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}